@model Flow.ViewModels.FlowIndexViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "_AdminLayout";
}

<h1 class="display-4">Flow Insights</h1>
<div class="d-flex bd-highlight">
    <div class="p-2 flex-fill bd-highlight">
        <div class="dash-card bg-c-blue order-dash-card">
            <div class="dash-card-block">
                <a asp-controller="Plants" style="color: white;">
                <h6 class="m-b-20">Active Plants</h6>
                </a>
                <h2 class="text-right"><i class="fa fa-industry f-left"></i><span>@Model.ActivePlants</span></h2>
                <h6 class="m-b-20">Active Departments</h6>
                <h2 class="text-right"><i class="fa fa-sitemap f-left"></i><span>@Model.ActiveDepartments</span></h2>
                <h6 class="m-b-20">Active Workstations</h6>
                <h2 class="text-right"><i class="fa fa-desktop f-left"></i><span>@Model.ActiveWorkstations</span></h2>
            </div>
        </div> 
    </div>
    <div class="p-2 flex-fill bd-highlight">
        <div class="dash-card bg-c-blue order-dash-card">
            <div class="dash-card-block">
                <h6 class="m-b-20">Active Employees</h6>
                <h2 class="text-right"><i class="fa fa-users f-left"></i><span>@Model.ActiveEmployees</span></h2>
                <h6 class="m-b-20">Supervisors</h6>
                <h2 class="text-right"><i class="fa fa-user-edit f-left"></i><span>@Model.ActiveSupervisors</span></h2>
                <h6 class="m-b-20">Engineers</h6>
                <h2 class="text-right"><i class="fa fa-user-cog f-left"></i><span>@Model.ActiveEngineers</span></h2>
                <h6 class="m-b-20">Operators</h6>
                <h2 class="text-right"><i class="fa fa-chalkboard-teacher f-left"></i><span>@Model.ActiveOperators</span></h2>
            </div>
        </div> 
    </div>
    <div class="p-2 flex-fill bd-highlight">
        <div class="dash-card bg-c-blue order-dash-card">
            <div class="dash-card-block">
                <h6 class="m-b-20">Active Employees</h6>
                <h2 class="text-right"><i class="fa fa-cart-plus f-left"></i><span>@Model.ActiveEmployees</span></h2>
                <p class="m-b-0">Completed Orders<span class="f-right">351</span></p>
            </div>
        </div> 
    </div>
</div>

<div class="d-flex">
    <div class="p-2 flex-grow-1">
        <div class="card" style="height: 500px">
            <div class="card-body">
                <div id="piechart" style="height: 100%" ; width: 100%;"></div>
            </div>
        </div>
    </div>
    <div class="p-2 flex-grow-3">
        <div class="card">
            <div class="card-body">
                <div id="speedometer"></div>
            </div>
        </div>
    </div>
    <div class="p-2 flex-grow-3">
            </div>
</div>

<head>
    <!--Load the AJAX API-->
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['gauge'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {

            var data = google.visualization.arrayToDataTable([
                ['Label', 'Value'],
                ['Efficiency', 80]
            ]);

            var options = {
                redFrom: 0, redTo: 50,
                yellowFrom: 50, yellowTo: 75,
                greenFrom: 75, greenTo: 100,
                minorTicks: 10,
            };

            var chart = new google.visualization.Gauge(document.getElementById('speedometer'));

            chart.draw(data, options);

            setInterval(function () {
                data.setValue(0, 1, 40 + Math.round(60 * Math.random()));
                chart.draw(data, options);
            }, 13000);
        }
    </script>
    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {

            // Create the data table.
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Topping');
            data.addColumn('number', 'Slices');
            data.addRows([
                ['Mushrooms', 3],
                ['Onions', 1],
                ['Olives', 1],
                ['Zucchini', 1],
                ['Pepperoni', 2]
            ]);

            // Set chart options
            var options = {

            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.PieChart(document.getElementById('piechart'));
            chart.draw(data, options);
        }
    </script>
</head>

